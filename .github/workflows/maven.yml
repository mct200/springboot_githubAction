name: Maven Build and Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  packaging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Configuration de JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Exécution des tests unitaires et empaquetage
        run: mvn clean package
        working-directory: ${{ github.workspace }}

      - name: Archivage des artefacts
        uses: actions/upload-artifact@v2
        with:
          name: jar-files
          path: target/*.jar

      - name: Sauvegarde du répertoire Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

  build_docker_image:
    runs-on: ubuntu-latest
    needs: packaging
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Récupération des artefacts
        uses: actions/download-artifact@v2
        with:
          name: jar-files
          path: target

      - name: Construction de l'image Docker
        run: |
          docker build -t mct22/springboot-github-action .
          docker save mct22/springboot-github-action > springboot-github-action.tar

      - name: Connexion à Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push de l'image Docker
        run: docker push $DOCKER_USER/springboot-github-action

      - name: Archivage de l'image Docker
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: springboot-github-action.tar
